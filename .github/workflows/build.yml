name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'web/package-lock.json'
        
    - name: Install dependencies
      working-directory: ./web
      run: npm ci --legacy-peer-deps
      
    - name: Build web application
      working-directory: ./web
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: web/build/
        retention-days: 30

  build-docker:
    runs-on: ubuntu-latest
    needs: build-web
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      working-directory: ./web
      run: |
        docker build -t signinsoft-web:latest .
        docker save signinsoft-web:latest > signinsoft-web.tar
        
    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: web/signinsoft-web.tar
        retention-days: 30

  build-mobile:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
        
    - name: Install dependencies
      working-directory: ./mobile
      run: npm ci
      
    - name: Build mobile application (web)
      working-directory: ./mobile
      run: npx expo export --platform web
      
    - name: Upload mobile build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mobile-build
        path: mobile/dist/
        retention-days: 30

  deployment-info:
    runs-on: ubuntu-latest
    needs: [build-web, build-docker, build-mobile]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Information
      run: |
        echo "üöÄ Build completed successfully!"
        echo ""
        echo "üì¶ Artifacts created:"
        echo "  - Web build artifacts"
        echo "  - Docker image"
        echo "  - Mobile build artifacts"
        echo ""
        echo "üè∑Ô∏è To create a production release:"
        echo "  1. Create a version tag: git tag v1.0.1"
        echo "  2. Push the tag: git push origin v1.0.1"
        echo "  3. This will trigger the production deployment workflow"
        echo ""
        echo "üîó Or use the manual deployment workflow:"
        echo "  - Go to Actions ‚Üí Deploy Production ‚Üí Run workflow"