{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./Audio.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"xktl81V3oqCxY304SmTTiwO26BE=","exportNames":["*"]}},{"name":"./ExponentAV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":78},"end":{"line":2,"column":38,"index":116}}],"key":"xs+SHqvQNFNb4NS5yBmWpK0Qt1c=","exportNames":["*"]}},{"name":"./Audio/Recording","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":34,"index":151}}],"key":"SCVX2/MV6seGdXkQ5fwOpTmLD9w=","exportNames":["*"]}},{"name":"./Audio/Sound","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":152},"end":{"line":4,"column":30,"index":182}}],"key":"f4v+LbhG0oTQxfo3ARvDmKxpjRs=","exportNames":["*"]}},{"name":"./Audio/AudioAvailability","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":183},"end":{"line":5,"column":62,"index":245}}],"key":"z0rjGfQ8XDXddYlooxXKKBiV4VQ=","exportNames":["*"]}},{"name":"./AV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":246},"end":{"line":6,"column":46,"index":292}}],"key":"GoKzZodUJxWkmrwumcAIgx4EAoU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    setAudioModeAsync: true,\n    setIsEnabledAsync: true,\n    PitchCorrectionQuality: true\n  };\n  Object.defineProperty(exports, \"PitchCorrectionQuality\", {\n    enumerable: true,\n    get: function () {\n      return _AV.PitchCorrectionQuality;\n    }\n  });\n  exports.setAudioModeAsync = setAudioModeAsync;\n  Object.defineProperty(exports, \"setIsEnabledAsync\", {\n    enumerable: true,\n    get: function () {\n      return _AudioAvailability.setIsEnabledAsync;\n    }\n  });\n  var _Audio = require(_dependencyMap[1], \"./Audio.types\");\n  var _ExponentAV = _interopRequireDefault(require(_dependencyMap[2], \"./ExponentAV\"));\n  var _Recording = require(_dependencyMap[3], \"./Audio/Recording\");\n  Object.keys(_Recording).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Recording[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Recording[key];\n      }\n    });\n  });\n  var _Sound = require(_dependencyMap[4], \"./Audio/Sound\");\n  Object.keys(_Sound).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Sound[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Sound[key];\n      }\n    });\n  });\n  var _AudioAvailability = require(_dependencyMap[5], \"./Audio/AudioAvailability\");\n  var _AV = require(_dependencyMap[6], \"./AV\");\n  const _populateMissingKeys = (userAudioMode, defaultAudioMode) => {\n    for (const key in defaultAudioMode) {\n      if (!userAudioMode.hasOwnProperty(key)) {\n        const prop = key;\n        userAudioMode[prop] = defaultAudioMode[prop];\n      }\n    }\n    return userAudioMode;\n  };\n  const defaultMode = {\n    allowsRecordingIOS: false,\n    interruptionModeIOS: _Audio.InterruptionModeIOS.MixWithOthers,\n    playsInSilentModeIOS: false,\n    staysActiveInBackground: false,\n    interruptionModeAndroid: _Audio.InterruptionModeAndroid.DuckOthers,\n    shouldDuckAndroid: true,\n    playThroughEarpieceAndroid: false\n  };\n  let currentAudioMode = null;\n  function getCurrentAudioMode() {\n    if (!currentAudioMode) {\n      return defaultMode;\n    }\n    return currentAudioMode;\n  }\n  /**\n   * We provide this API to customize the audio experience on iOS and Android.\n   * @param partialMode\n   * @return A `Promise` that will reject if the audio mode could not be enabled for the device.\n   */\n  async function setAudioModeAsync(partialMode) {\n    const mode = _populateMissingKeys(partialMode, getCurrentAudioMode());\n    if (!_Audio.InterruptionModeIOS[mode.interruptionModeIOS]) {\n      throw new Error(`\"interruptionModeIOS\" was set to an invalid value.`);\n    }\n    if (!_Audio.InterruptionModeAndroid[mode.interruptionModeAndroid]) {\n      throw new Error(`\"interruptionModeAndroid\" was set to an invalid value.`);\n    }\n    if (typeof mode.allowsRecordingIOS !== 'boolean' || typeof mode.playsInSilentModeIOS !== 'boolean' || typeof mode.staysActiveInBackground !== 'boolean' || typeof mode.shouldDuckAndroid !== 'boolean' || typeof mode.playThroughEarpieceAndroid !== 'boolean') {\n      throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", \"staysActiveInBackground\" and \"shouldDuckAndroid\" must be booleans.');\n    }\n    currentAudioMode = mode;\n    return await _ExponentAV.default.setAudioMode(mode);\n  }\n});","lineCount":96,"map":[[24,2,1,0],[24,6,1,0,"_Audio"],[24,12,1,0],[24,15,1,0,"require"],[24,22,1,0],[24,23,1,0,"_dependencyMap"],[24,37,1,0],[25,2,2,0],[25,6,2,0,"_ExponentAV"],[25,17,2,0],[25,20,2,0,"_interopRequireDefault"],[25,42,2,0],[25,43,2,0,"require"],[25,50,2,0],[25,51,2,0,"_dependencyMap"],[25,65,2,0],[26,2,3,0],[26,6,3,0,"_Recording"],[26,16,3,0],[26,19,3,0,"require"],[26,26,3,0],[26,27,3,0,"_dependencyMap"],[26,41,3,0],[27,2,3,0,"Object"],[27,8,3,0],[27,9,3,0,"keys"],[27,13,3,0],[27,14,3,0,"_Recording"],[27,24,3,0],[27,26,3,0,"forEach"],[27,33,3,0],[27,44,3,0,"key"],[27,47,3,0],[28,4,3,0],[28,8,3,0,"key"],[28,11,3,0],[28,29,3,0,"key"],[28,32,3,0],[29,4,3,0],[29,8,3,0,"Object"],[29,14,3,0],[29,15,3,0,"prototype"],[29,24,3,0],[29,25,3,0,"hasOwnProperty"],[29,39,3,0],[29,40,3,0,"call"],[29,44,3,0],[29,45,3,0,"_exportNames"],[29,57,3,0],[29,59,3,0,"key"],[29,62,3,0],[30,4,3,0],[30,8,3,0,"key"],[30,11,3,0],[30,15,3,0,"exports"],[30,22,3,0],[30,26,3,0,"exports"],[30,33,3,0],[30,34,3,0,"key"],[30,37,3,0],[30,43,3,0,"_Recording"],[30,53,3,0],[30,54,3,0,"key"],[30,57,3,0],[31,4,3,0,"Object"],[31,10,3,0],[31,11,3,0,"defineProperty"],[31,25,3,0],[31,26,3,0,"exports"],[31,33,3,0],[31,35,3,0,"key"],[31,38,3,0],[32,6,3,0,"enumerable"],[32,16,3,0],[33,6,3,0,"get"],[33,9,3,0],[33,20,3,0,"get"],[33,21,3,0],[34,8,3,0],[34,15,3,0,"_Recording"],[34,25,3,0],[34,26,3,0,"key"],[34,29,3,0],[35,6,3,0],[36,4,3,0],[37,2,3,0],[38,2,4,0],[38,6,4,0,"_Sound"],[38,12,4,0],[38,15,4,0,"require"],[38,22,4,0],[38,23,4,0,"_dependencyMap"],[38,37,4,0],[39,2,4,0,"Object"],[39,8,4,0],[39,9,4,0,"keys"],[39,13,4,0],[39,14,4,0,"_Sound"],[39,20,4,0],[39,22,4,0,"forEach"],[39,29,4,0],[39,40,4,0,"key"],[39,43,4,0],[40,4,4,0],[40,8,4,0,"key"],[40,11,4,0],[40,29,4,0,"key"],[40,32,4,0],[41,4,4,0],[41,8,4,0,"Object"],[41,14,4,0],[41,15,4,0,"prototype"],[41,24,4,0],[41,25,4,0,"hasOwnProperty"],[41,39,4,0],[41,40,4,0,"call"],[41,44,4,0],[41,45,4,0,"_exportNames"],[41,57,4,0],[41,59,4,0,"key"],[41,62,4,0],[42,4,4,0],[42,8,4,0,"key"],[42,11,4,0],[42,15,4,0,"exports"],[42,22,4,0],[42,26,4,0,"exports"],[42,33,4,0],[42,34,4,0,"key"],[42,37,4,0],[42,43,4,0,"_Sound"],[42,49,4,0],[42,50,4,0,"key"],[42,53,4,0],[43,4,4,0,"Object"],[43,10,4,0],[43,11,4,0,"defineProperty"],[43,25,4,0],[43,26,4,0,"exports"],[43,33,4,0],[43,35,4,0,"key"],[43,38,4,0],[44,6,4,0,"enumerable"],[44,16,4,0],[45,6,4,0,"get"],[45,9,4,0],[45,20,4,0,"get"],[45,21,4,0],[46,8,4,0],[46,15,4,0,"_Sound"],[46,21,4,0],[46,22,4,0,"key"],[46,25,4,0],[47,6,4,0],[48,4,4,0],[49,2,4,0],[50,2,5,0],[50,6,5,0,"_AudioAvailability"],[50,24,5,0],[50,27,5,0,"require"],[50,34,5,0],[50,35,5,0,"_dependencyMap"],[50,49,5,0],[51,2,6,0],[51,6,6,0,"_AV"],[51,9,6,0],[51,12,6,0,"require"],[51,19,6,0],[51,20,6,0,"_dependencyMap"],[51,34,6,0],[52,2,7,0],[52,8,7,6,"_populateMissingKeys"],[52,28,7,26],[52,31,7,29,"_populateMissingKeys"],[52,32,7,30,"userAudioMode"],[52,45,7,43],[52,47,7,45,"defaultAudioMode"],[52,63,7,61],[52,68,7,66],[53,4,8,4],[53,9,8,9],[53,15,8,15,"key"],[53,18,8,18],[53,22,8,22,"defaultAudioMode"],[53,38,8,38],[53,40,8,40],[54,6,9,8],[54,10,9,12],[54,11,9,13,"userAudioMode"],[54,24,9,26],[54,25,9,27,"hasOwnProperty"],[54,39,9,41],[54,40,9,42,"key"],[54,43,9,45],[54,44,9,46],[54,46,9,48],[55,8,10,12],[55,14,10,18,"prop"],[55,18,10,22],[55,21,10,25,"key"],[55,24,10,28],[56,8,11,12,"userAudioMode"],[56,21,11,25],[56,22,11,26,"prop"],[56,26,11,30],[56,27,11,31],[56,30,11,34,"defaultAudioMode"],[56,46,11,50],[56,47,11,51,"prop"],[56,51,11,55],[56,52,11,56],[57,6,12,8],[58,4,13,4],[59,4,14,4],[59,11,14,11,"userAudioMode"],[59,24,14,24],[60,2,15,0],[60,3,15,1],[61,2,16,0],[61,8,16,6,"defaultMode"],[61,19,16,17],[61,22,16,20],[62,4,17,4,"allowsRecordingIOS"],[62,22,17,22],[62,24,17,24],[62,29,17,29],[63,4,18,4,"interruptionModeIOS"],[63,23,18,23],[63,25,18,25,"InterruptionModeIOS"],[63,51,18,44],[63,52,18,45,"MixWithOthers"],[63,65,18,58],[64,4,19,4,"playsInSilentModeIOS"],[64,24,19,24],[64,26,19,26],[64,31,19,31],[65,4,20,4,"staysActiveInBackground"],[65,27,20,27],[65,29,20,29],[65,34,20,34],[66,4,21,4,"interruptionModeAndroid"],[66,27,21,27],[66,29,21,29,"InterruptionModeAndroid"],[66,59,21,52],[66,60,21,53,"DuckOthers"],[66,70,21,63],[67,4,22,4,"shouldDuckAndroid"],[67,21,22,21],[67,23,22,23],[67,27,22,27],[68,4,23,4,"playThroughEarpieceAndroid"],[68,30,23,30],[68,32,23,32],[69,2,24,0],[69,3,24,1],[70,2,25,0],[70,6,25,4,"currentAudioMode"],[70,22,25,20],[70,25,25,23],[70,29,25,27],[71,2,26,0],[71,11,26,9,"getCurrentAudioMode"],[71,30,26,28,"getCurrentAudioMode"],[71,31,26,28],[71,33,26,31],[72,4,27,4],[72,8,27,8],[72,9,27,9,"currentAudioMode"],[72,25,27,25],[72,27,27,27],[73,6,28,8],[73,13,28,15,"defaultMode"],[73,24,28,26],[74,4,29,4],[75,4,30,4],[75,11,30,11,"currentAudioMode"],[75,27,30,27],[76,2,31,0],[77,2,32,0],[78,0,33,0],[79,0,34,0],[80,0,35,0],[81,0,36,0],[82,2,37,7],[82,17,37,22,"setAudioModeAsync"],[82,34,37,39,"setAudioModeAsync"],[82,35,37,40,"partialMode"],[82,46,37,51],[82,48,37,53],[83,4,38,4],[83,10,38,10,"mode"],[83,14,38,14],[83,17,38,17,"_populateMissingKeys"],[83,37,38,37],[83,38,38,38,"partialMode"],[83,49,38,49],[83,51,38,51,"getCurrentAudioMode"],[83,70,38,70],[83,71,38,71],[83,72,38,72],[83,73,38,73],[84,4,39,4],[84,8,39,8],[84,9,39,9,"InterruptionModeIOS"],[84,35,39,28],[84,36,39,29,"mode"],[84,40,39,33],[84,41,39,34,"interruptionModeIOS"],[84,60,39,53],[84,61,39,54],[84,63,39,56],[85,6,40,8],[85,12,40,14],[85,16,40,18,"Error"],[85,21,40,23],[85,22,40,24],[85,74,40,76],[85,75,40,77],[86,4,41,4],[87,4,42,4],[87,8,42,8],[87,9,42,9,"InterruptionModeAndroid"],[87,39,42,32],[87,40,42,33,"mode"],[87,44,42,37],[87,45,42,38,"interruptionModeAndroid"],[87,68,42,61],[87,69,42,62],[87,71,42,64],[88,6,43,8],[88,12,43,14],[88,16,43,18,"Error"],[88,21,43,23],[88,22,43,24],[88,78,43,80],[88,79,43,81],[89,4,44,4],[90,4,45,4],[90,8,45,8],[90,15,45,15,"mode"],[90,19,45,19],[90,20,45,20,"allowsRecordingIOS"],[90,38,45,38],[90,43,45,43],[90,52,45,52],[90,56,46,8],[90,63,46,15,"mode"],[90,67,46,19],[90,68,46,20,"playsInSilentModeIOS"],[90,88,46,40],[90,93,46,45],[90,102,46,54],[90,106,47,8],[90,113,47,15,"mode"],[90,117,47,19],[90,118,47,20,"staysActiveInBackground"],[90,141,47,43],[90,146,47,48],[90,155,47,57],[90,159,48,8],[90,166,48,15,"mode"],[90,170,48,19],[90,171,48,20,"shouldDuckAndroid"],[90,188,48,37],[90,193,48,42],[90,202,48,51],[90,206,49,8],[90,213,49,15,"mode"],[90,217,49,19],[90,218,49,20,"playThroughEarpieceAndroid"],[90,244,49,46],[90,249,49,51],[90,258,49,60],[90,260,49,62],[91,6,50,8],[91,12,50,14],[91,16,50,18,"Error"],[91,21,50,23],[91,22,50,24],[91,167,50,169],[91,168,50,170],[92,4,51,4],[93,4,52,4,"currentAudioMode"],[93,20,52,20],[93,23,52,23,"mode"],[93,27,52,27],[94,4,53,4],[94,11,53,11],[94,17,53,17,"ExponentAV"],[94,36,53,27],[94,37,53,28,"setAudioMode"],[94,49,53,40],[94,50,53,41,"mode"],[94,54,53,45],[94,55,53,46],[95,2,54,0],[96,0,54,1],[96,3]],"functionMap":{"names":["<global>","_populateMissingKeys","getCurrentAudioMode","setAudioModeAsync"],"mappings":"AAA;6BCM;CDQ;AEW;CFK;OGM;CHiB"}},"type":"js/module"}]}